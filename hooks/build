#!/bin/bash
[ -z "$DEBUG" ] || set -x
set -e

PUSH=""

[ -z "$IMAGE_NAME" ] && echo "IMAGE_NAME is required" && exit 1;
function imagename {
  buildname=$1
  case $IMAGE_NAME in
    *:latest) echo -n $IMAGE_NAME | sed "s|:latest|:$buildname|" ;;
    *:*) echo -n $IMAGE_NAME | sed "s|:\(.*\)|:\1-$buildname|" ;;
    *) echo $IMAGE_NAME:$buildname ;;
  esac
}

jre=$(imagename jre)
docker build -t solsson/kafka:jre -t "$jre" ./
PUSH="$PUSH $jre"

docker build -t solsson/kafka -t "$IMAGE_NAME" ./kafka
PUSH="$PUSH $IMAGE_NAME"

graalvm=$(imagename graalvm)
docker build -t solsson/kafka:graalvm -t "$graalvm" ./jdk-adoptopenjdk-graalvm
PUSH="$PUSH $graalvm"

nonroot=$(imagename nonroot)
docker build -t solsson/kafka:nonroot -t "$nonroot" ./kafka-nonroot
PUSH="$PUSH $nonroot"

# Generatoe entrypoints
entrypoints=$(imagename entrypoints)
docker build -t $entrypoints ./kafka-entrypoints

function entrypoint_gen {
  echo "# $@"
  script=$1; shift
  name=$(basename $script | sed 's|\.sh$||')
  dfile=./kafka-entrypoints/$name.Dockerfile
  image=$(imagename $name)
  echo "FROM solsson/kafka:nonroot" > $dfile
  # TODO ideally we'd have only [executable, -cp, long classpath string] in entrypoint and the rest as CMD
  echo -n 'ENTRYPOINT ["'  >> $dfile
  docker run --rm --entrypoint $script $entrypoints $@ \
    | sed 's| |" \\\
  , "|g' \
    | sed 's|^  , "/etc/kafka|  ]" \
  CMD ["/etc/kafka|g' \
    | sed 's|, "-Xlog:gc|#, "-Xlog:gc|g' \
    | sed 's|, "-Dcom.sun.management.jmxremote|#, "-Dcom.sun.management.jmxremote|g' \
    | sed 's|, "/opt/kafka/libs/extensions/..*:/opt/kafka/bin/../libs/.*|, "/opt/kafka/libs/extensions/*:/opt/kafka/libs/*" \\|g' \
    >> $dfile
  echo '"]'                >> $dfile
  docker build -t $image -f $dfile ./kafka-entrypoints
  PUSH="$PUSH $image"
}

entrypoint_gen ./bin/kafka-server-start.sh /etc/kafka/server.properties
entrypoint_gen ./bin/zookeeper-server-start.sh /etc/kafka/zookeeper.properties
entrypoint_gen ./bin/kafka-configs.sh
entrypoint_gen ./bin/kafka-topics.sh
entrypoint_gen ./bin/kafka-consumer-groups.sh
entrypoint_gen ./bin/kafka-reassign-partitions.sh
entrypoint_gen ./bin/kafka-leader-election.sh

# Entrypoints done

echo "PUSH list contains: $PUSH"
[ -z "$NOPUSH" ] || exit 0
for P in $PUSH; do docker push $P; done
